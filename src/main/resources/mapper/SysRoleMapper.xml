<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.managersystem.mapper.SysRoleMapper">

    <resultMap type="com.example.managersystem.domain.SysRole" id="SysRoleMap">
        <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleKey" column="role_key" jdbcType="VARCHAR"/>
        <result property="dataScope" column="data_scope" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询所有-->
    <select id="queryAll" resultMap="SysRoleMap">
        select role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark
        from sys_role
        where create_by = #{userId}
        and status = 0
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="SysRoleMap">
        select role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark
        from sys_role
        where role_id = #{roleId}
        and create_by = #{userId}
        and status = 0
    </select>

    <select id="queryByUserId" resultMap="SysRoleMap">
        select role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark
        from sys_role
        where role_id = #{userId}
        and status = 0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysRoleMap">
        select
        role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark
        from sys_role
        <where>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="roleKey != null and roleKey != ''">
                and role_key = #{roleKey}
            </if>
            <if test="dataScope != null and dataScope != ''">
                and data_scope = #{dataScope}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_role
        <where>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="roleKey != null and roleKey != ''">
                and role_key = #{roleKey}
            </if>
            <if test="dataScope != null and dataScope != ''">
                and data_scope = #{dataScope}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roleId" useGeneratedKeys="true">
        insert into sys_role(role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark)
        values (#{roleId}, #{roleName}, #{roleKey}, #{dataScope}, #{status}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into sys_role(role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleId}, #{entity.roleName}, #{entity.roleKey}, #{entity.dataScope}, #{entity.status}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into sys_role(role_id, role_name, role_key, data_scope, status, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{roleId}, #{entity.roleName}, #{entity.roleKey}, #{entity.dataScope}, #{entity.status}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        role_name = values(role_name), role_key = values(role_key), data_scope = values(data_scope), status =
        values(status), create_by = values(create_by), create_time = values(create_time), update_by =
        values(update_by), update_time = values(update_time), remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="roleKey != null and roleKey != ''">
                role_key = #{roleKey},
            </if>
            <if test="dataScope != null and dataScope != ''">
                data_scope = #{dataScope},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where role_id = #{roleId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_role
        where role_id = #{roleId}
    </delete>

</mapper>
